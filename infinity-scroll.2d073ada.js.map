{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAKMC,EAAU,qCACVC,EAAOC,SAASC,cAAc,gBAC9BC,EAAUF,SAASC,cAAc,YAEnCE,EAAc,GACdC,EAAO,EAGLC,EAAQL,SAASC,cAAc,UAI/BK,EAAW,IAAIC,sBAErB,SAA0BC,GACxBA,EAAQC,S,EAAQC,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAGVC,E,sEAFND,EAAME,eAAc,C,sBACtBZ,GAAQ,E,SACea,EAAUb,EAAMD,G,OACvCe,EADMH,EAAMI,EAAAC,KAAJL,MAGJA,EAAKM,KAAKC,OAfJ,IAewBP,EAAKM,KAAKC,OAAS,IACnDhB,EAASiB,UAAUlB,GAEnBmB,EAAAC,OAAOC,KACL,+D,oDAVcZ,G,kCAAP,I,IAND,CACda,WAAY,U,SAwBCC,I,OAAAA,EAAflB,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,EAAwBgB,G,IAOdd,E,yEANRc,EAAIC,iBACJ1B,EAAO,EACPF,EAAQ6B,UAAY,GAEpB5B,EAAcJ,EAAKiC,SAASC,YAAYC,MAAMC,O,SAEvBlB,EAAUb,EAAMD,G,OAAjCY,EAAMI,EAAAC,KAAJL,KAERT,EAAS8B,QAAQ/B,GAEQ,IAArBU,EAAKM,KAAKC,QACZE,EAAAC,OAAOY,QACL,4EAIJnB,EAAaH,GAETA,EAAKM,KAAKC,OAAS,GACrBE,EAAAC,OAAOa,QAAQ,oBAAmCC,OAAfxB,EAAKyB,UAAU,eAGhDzB,EAAKM,KAAKC,OAnDA,IAmDoBP,EAAKM,KAAKC,OAAS,IACnDhB,EAASiB,UAAUlB,GAEnBmB,EAAAC,OAAOC,KAAK,+D,6CA1BOe,MAAAC,KAAAC,U,UAoCR1B,EAAU2B,EAAMC,G,OAAhBC,EAASL,MAAAC,KAAAC,U,UAATG,I,OAAAA,EAAfpC,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,EAAyB+B,EAAMC,G,IACvBE,E,yEAAAA,EAAe,IAAIC,gBAAgB,CACvCC,IAAKnD,EACLoD,EAAGL,EACHM,KAAMP,EACNQ,SArEY,GAsEZC,WAAY,QACZC,YAAa,aACbC,YAAY,I,UAGD,EAAAC,EAAAC,SAAM,IAAiBlB,OAAbQ,I,oFAXDN,MAAAC,KAAAC,U,CAcxB,SAASzB,EAAaH,GACpB,IAAM2C,EAAS3C,EAAKM,KACjBsC,KACC,SAAAC,G,MACE,2CAGuCrB,OAFPqB,EAAKC,cAAc,uFAEetB,OAA3BqB,EAAKE,aAAa,WAGvCvB,OAHgDqB,EAAKG,KAAK,kHAM1DxB,OAHAqB,EAAKI,MAAM,uFAMRzB,OAHHqB,EAAKK,MAAM,0FAMP1B,OAHDqB,EAAKM,SAAS,2FAGE3B,OAAfqB,EAAKO,UAAU,mF,IAOxCC,KAAK,IAERlE,EAAQmE,mBAAmB,YAAaX,GACxCY,EAAeC,S,CAjFjBxE,EAAKyE,iBAAiB,U,SAEE3C,G,OAATD,EAAQa,MAAAC,KAAAC,U,IAkCvBa,EAAAC,QAAMgB,SAASC,QAAU,2BAgDzB,IAAMJ,EAAiB,IAAI5D,EAAAiE,GAAJ,CAAmB,aAAc,CACtDC,aAAc,MACdC,aAAc,IACdC,gBAAiB,U","sources":["src/infinity-scroll.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst API_KEY = '39207627-8a410277f132e49ffdfa9ce97';\nconst form = document.querySelector('.search-form');\nconst gallery = document.querySelector('.gallery');\n\nlet searchQuery = '';\nlet page = 1;\nconst perPage = 40;\n\nconst guard = document.querySelector('.guard');\nconst options = {\n  rootMargin: '400px',\n};\nconst observer = new IntersectionObserver(observerCallback, options);\n\nfunction observerCallback(entries) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      page += 1;\n      const { data } = await fetchData(page, searchQuery);\n      createMarkup(data);\n\n      if (data.hits.length < perPage && data.hits.length > 0) {\n        observer.unobserve(guard);\n\n        Notify.info(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n      }\n    }\n  });\n}\n\nform.addEventListener('submit', onSubmit);\n\nasync function onSubmit(evt) {\n  evt.preventDefault();\n  page = 1;\n  gallery.innerHTML = '';\n\n  searchQuery = form.elements.searchQuery.value.trim();\n\n  const { data } = await fetchData(page, searchQuery);\n\n  observer.observe(guard);\n\n  if (data.hits.length === 0) {\n    Notify.failure(\n      'Sorry, there are no images matching your search query. Please try again.'\n    );\n  }\n\n  createMarkup(data);\n\n  if (data.hits.length > 1) {\n    Notify.success(`Hooray! We found ${data.totalHits} images ðŸ˜Ž`);\n  }\n\n  if (data.hits.length < perPage && data.hits.length > 0) {\n    observer.unobserve(guard);\n\n    Notify.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n\n  // if (data.hits.length === perPage) {\n  //   loadMoreBtn.style.display = 'block';\n  // }\n}\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nasync function fetchData(page, searchQuery) {\n  const searchParams = new URLSearchParams({\n    key: API_KEY,\n    q: searchQuery,\n    page: page,\n    per_page: perPage,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  return await axios(`?${searchParams}`);\n}\n\nfunction createMarkup(data) {\n  const markup = data.hits\n    .map(\n      elem =>\n        `\n        <a class=\"gallery-link\" href=\"${elem.largeImageURL}\">\n        <div class=\"photo-card\">\n          <img width=\"400\" height=\"300\" src=\"${elem.webformatURL}\" alt=\"${elem.tags}\" loading=\"lazy\" />\n          <div class=\"info\">\n            <p class=\"info-item\">\n              <b>Likes: ${elem.likes}</b>\n            </p>\n            <p class=\"info-item\">\n              <b>Views: ${elem.views}</b>\n            </p>\n            <p class=\"info-item\">\n              <b>Comments: ${elem.comments}</b>\n            </p>\n            <p class=\"info-item\">\n              <b>Downloads: ${elem.downloads}</b>\n            </p>\n          </div>\n        </div>\n        </a>\n        `\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n  simpleLightBox.refresh();\n}\n\nconst simpleLightBox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n  captionPosition: 'bottom',\n});\n\n// async function onClickMore() {\n//   page += 1;\n//   const { data } = await fetchData(page, searchQuery);\n//   createMarkup(data);\n\n//   if (data.hits.length < perPage && data.hits.length > 0) {\n//     Notify.info(\"We're sorry, but you've reached the end of search results.\");\n//   }\n// }\n"],"names":["$bpxeT","parcelRequire","$1a6ea5a358f44918$var$API_KEY","$1a6ea5a358f44918$var$form","document","querySelector","$1a6ea5a358f44918$var$gallery","$1a6ea5a358f44918$var$searchQuery","$1a6ea5a358f44918$var$page","$1a6ea5a358f44918$var$guard","$1a6ea5a358f44918$var$observer","IntersectionObserver","entries","forEach","$parcel$interopDefault","$2TvXO","mark","_callee","entry","data","isIntersecting","$1a6ea5a358f44918$var$fetchData","$1a6ea5a358f44918$var$createMarkup","_ctx","sent","hits","length","unobserve","$h6c0i","Notify","info","rootMargin","$1a6ea5a358f44918$var$_onSubmit","evt","preventDefault","innerHTML","elements","searchQuery","value","trim","observe","failure","success","concat","totalHits","apply","this","arguments","page1","searchQuery1","$1a6ea5a358f44918$var$_fetchData","searchParams","URLSearchParams","key","q","page","per_page","image_type","orientation","safesearch","$dIxxU","default","markup","map","elem","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","$1a6ea5a358f44918$var$simpleLightBox","refresh","addEventListener","defaults","baseURL","$5IjG7","captionsData","captionDelay","captionPosition"],"version":3,"file":"infinity-scroll.2d073ada.js.map"}